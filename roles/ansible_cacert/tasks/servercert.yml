---
- name: "MMN cacert - Build CA path variables"
  ansible.builtin.include_tasks: paths_ca.yml

- name: "MMN cacert - Build Server path variables"
  ansible.builtin.include_tasks: paths_server.yml

- name: "MMN cacert - Make sure CA cert is installed to target host"
  become: True
  ansible.builtin.copy:
    dest: "{{ cacert_path_ca_destination }}"
    content: "{{ cacert_ca_cert.certificate }}"
    backup: True

- name: "MMN cacert - Manage server private keys"
  become: True
  community.crypto.openssl_privatekey:
    path: "{{ cacert_path_server_key }}"
    passphrase: "{{ cacert_servercert_passphrase|default(omit) }}"
    size: 4096
    mode: 0600

- name: "MMN cacert - Manage server CSRs"
  become: True
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ cacert_path_server_key }}"
    privatekey_passphrase: "{{ cacert_servercert_passphrase | default(omit) }}"
    common_name: "{{ cacert_servercert_common_name | default(inventory_hostname) }}"
    organization_name: "{{ cacert_servercert_organization_name | default(omit) }}"
    organizational_unit_name: "{{ cacert_servercert_organizational_unit_name | default(omit) }}"
    state_or_province_name: "{{ cacert_servercert_state_or_province_name | default(omit) }}"
    locality_name: "{{ cacert_servercert_locality_name | default(omit) }}"
    country_name: "{{ cacert_servercert_country_name | default(omit) }}"
    email_address: "{{ cacert_servercert_email_address | default(omit) }}"
    subject_alt_name: >-
      {{ (cacert_servercert_altnames | map(attribute='prefix') | zip(cacert_servercert_altnames | map(attribute='name')) | map('join', ':') | list)
         if cacert_servercert_altnames is defined else omit }}
  register: csr_server
  changed_when: false

- name: "MMN cacert - Check if cert exists"
  ansible.builtin.stat:
    path: "{{ cacert_path_server_cert }}"
  register: stat_certificate_server

- name: "MMN cacert - Read existing certificate"
  ansible.builtin.slurp:
    src: "{{ cacert_path_server_cert }}"
  register: certificate_server
  when: stat_certificate_server.stat.exists

- name: "MMN cacert - Sign certificate with our CA"
  community.crypto.x509_certificate_pipe:
    csr_content: "{{ csr_server.csr }}"
    content: "{{ (certificate_server.content | b64decode) if stat_certificate_server.stat.exists else omit }}"
    provider: ownca
    ownca_path: "{{ cacert_path_ca_cert }}"
    ownca_privatekey_path: "{{ cacert_path_ca_key }}"
    ownca_privatekey_passphrase: "{{ cacert_ca.value.key.passphrase }}"
    ownca_not_after: "{{ cacert_servercert_not_after }}"
    ownca_not_before: "{{ cacert_servercert_not_before | default('-1d') }}" 
  register: certificate_server
  delegate_to: localhost

- name: "MMN cacert - Write server cert to file"
  become: true
  ansible.builtin.copy:
    dest: "{{ cacert_path_server_cert }}"
    content: "{{ certificate_server.certificate }}"
    backup: True
  when: certificate_server is changed
      #when: cacert_ca_cert is changed # FIXME replace with cert var 
