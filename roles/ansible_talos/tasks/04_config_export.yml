---
# Update talosctl
- name: MMN Talos - Update talosctl configs
  ansible.builtin.command: talosctl config endpoint {{ talos_cluster.value.hosts_controlplane[0].ip4[0] | ansible.utils.ipaddr('address') }} --talosconfig {{ talos_config_file }}
  changed_when: true

- name: MMN Talos - Update talosctl configs
  ansible.builtin.command: talosctl config node {{ talos_cluster.value.hosts_controlplane[0].ip4[0] | ansible.utils.ipaddr('address') }} --talosconfig {{ talos_config_file }}
  changed_when: true

  #################################
  # WAIT FOR REBOOT & BOOTSTRAP   #
  #################################
- name: MMN Talos - Keep trying to bootstrap
  # FIX!
  # ansible.builtin.command: "talosctl bootstrap -e 10.10.129.30 -n 10.10.129.30"
  ansible.builtin.command: "talosctl bootstrap"
  environment:
    TALOSCONFIG: "{{ talosctl_config_path }}" 
  #ansible.builtin.command: "talosctl bootstrap -e {{ talos_cluster.value.hosts_controlplane[0].ip4[0] | ansible.utils.ipaddr('address') }} -n {{ talos_cluster.value.hosts_controlplane[0].ip4[0] | ansible.utils.ipaddr('address') }}"
  register: talos_bootstrap_result
  retries: 15
  delay: 30
  until: talos_bootstrap_result.rc == 0
  changed_when: talos_bootstrap_result.rc == 0

# Grab kubeconfig
- name: MMN Talos - Get kubeconfig
  # removed explicit talosconfig due to setting env var
  #ansible.builtin.command: "talosctl kubeconfig {{ talos_config_path }} --talosconfig {{ talos_config_file }}"
  ansible.builtin.command: "talosctl kubeconfig {{ talos_config_path }} -e {{ talos_cluster.value.controlplane_vip }}"
  environment:
    TALOSCONFIG: "{{ talosctl_config_path }}" 
  changed_when: true
  when: talos_cluster.value.controlplane_vip is defined
